// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strider.Infra.Data.Context;

namespace Strider.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Strider.Infra.Data.Model.Followers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FollowerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FollowerId");

                    b.HasIndex("UserId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("Strider.Infra.Data.Model.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RepostedFromId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RepostedFromId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Strider.Infra.Data.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Joined")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f31e77da-5c11-4d2a-b918-c57048519063"),
                            Joined = new DateTime(2022, 4, 10, 10, 47, 9, 921, DateTimeKind.Local).AddTicks(5319),
                            Username = "User01"
                        },
                        new
                        {
                            Id = new Guid("ca3d549b-7f9c-4e1f-a6e8-a126a431dbea"),
                            Joined = new DateTime(2022, 4, 10, 10, 47, 9, 922, DateTimeKind.Local).AddTicks(5802),
                            Username = "User02"
                        },
                        new
                        {
                            Id = new Guid("954c5912-b4d1-4c2a-ab6d-be53233fa1a2"),
                            Joined = new DateTime(2022, 4, 10, 10, 47, 9, 922, DateTimeKind.Local).AddTicks(5819),
                            Username = "User03"
                        });
                });

            modelBuilder.Entity("Strider.Infra.Data.Model.Followers", b =>
                {
                    b.HasOne("Strider.Infra.Data.Model.User", "Follower")
                        .WithMany()
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Strider.Infra.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Follower");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Strider.Infra.Data.Model.Post", b =>
                {
                    b.HasOne("Strider.Infra.Data.Model.Post", "RepostedFrom")
                        .WithMany()
                        .HasForeignKey("RepostedFromId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Strider.Infra.Data.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RepostedFrom");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
